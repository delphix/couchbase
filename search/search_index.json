{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview \u00b6 Couchbase plugin is developed to virtualize Couchbase data source. The ingestion (synchronization process) leveraging the following built-in Couchbase technologies depends on the Couchbase Edition: Community Edition: Cross Data Center Replication (XDCR) Enterprise Edition: existing backup manged by cbbackupmgr tool (Zero production touch ingestion) Cross Data Center Replication (XDCR) Cross Data Center Replication (XDCR) \u00b6 Cross Data Center Replication is a method to replicate date between source and target bucket. Plugin is automatically setting up an one way replication from a production Couchbase cluster to a staging Couchbase cluster created by Delphix Enging during a dSource ingestion. Replication to staging server will be added to the existing list of replication and it will be managed by plugin itself. link to official XDCR documentation Exiting backup ingestion ( cbbackupmgr ) \u00b6 Couchbase Enterprise Edition is providing an additional tool called cbbackupmgr . This tool can be leveraged to protect a production Couchbase cluster and an existing backup will be used to create a staging server. This method allow cloning a production Couchbase cluster without touching a production server by Delphix Engine nor staging server. In zero production touch setup staging server has to have access to cbbackupmgr archive folder and repository. link to official cbbackupmgr documentation Architecture diagrams \u00b6 Ingestion using XDCR \u00b6 Ingestion using backup \u00b6 Support Matrix \u00b6 Prerequisites \u00b6 Staging environment \u00b6 Couchbase binaries installed and configured: disable a auto start using OS services systemctl disable couchbase-server.service systemctl stop couchbase-server.service Regular o/s user - ex. delphix_os Add OS user to couchbase OS group Empty folder on host to hold delphix toolkit [ approximate 2GB free space ]. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and acts as a base folder for NFS mounts. sudo privileges for mount and umount. See sample below assuming delphix_os is used as delphix user. Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount If Couchbase service is installed using couchbase user, Delphix OS user ex. delphix_os has to be able to run any command as couchbase using sudo delphix_os ALL=(couchbase) NOPASSWD: ALL Additional prerequisites for XDCR ingestion \u00b6 Production Couchbase database user with the following provileges XDCR_ADMIN DATA_MONITOR If source is a Community Edition, a production Couchbase database user has to be a full admin privilege to be able to create and monitor XDCR replication Additional prerequisites for backup ingestion \u00b6 Access to an existing backup on the staging server. If access is provided over NFS to an existing backup (ex. mount path is /u01/couchbase_backup ) and repository is called PROD the following command have to succeed: /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo PROD If a new backup will configured on the staging host, the following commands should be executed. Ex. backup location /u01/couchbase_backup , repository name delphix Create config file using the following command. This file will be required at the time of dSource creation using CBBACKUPMGR. /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix Bring backup of the production system: Copy an existing backup Backup from source host into backup directory of staging host /opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<production server> -u user -p password Target environment \u00b6 Couchbase binaries installed and configured: disable a auto start using OS services systemctl disable couchbase-server.service systemctl stop couchbase-server.service Regular o/s user - ex. delphix_os Add OS user to couchbase OS group Empty folder on host to hold delphix toolkit [ approximate 2GB free space ]. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and acts as a base folder for NFS mounts. sudo privileges for mount and umount. See sample below assuming delphix_os is used as delphix user. bash Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount If Couchbase service is installed using couchbase user, Delphix OS user ex. delphix_os has to be able to run any command as couchbase using sudo shell delphix_os ALL=(couchbase) NOPASSWD: ALL Ports \u00b6 Ports for XDCR \u00b6 Ports for Backup \u00b6 Limitations \u00b6 Multi-node VDB can't be cloned. V2P is not supported Point in time recovery is not supported. Provision / refresh / rewind time is based on snapshot only","title":"Overview"},{"location":"index.html#overview","text":"Couchbase plugin is developed to virtualize Couchbase data source. The ingestion (synchronization process) leveraging the following built-in Couchbase technologies depends on the Couchbase Edition: Community Edition: Cross Data Center Replication (XDCR) Enterprise Edition: existing backup manged by cbbackupmgr tool (Zero production touch ingestion) Cross Data Center Replication (XDCR)","title":"Overview"},{"location":"index.html#cross-data-center-replication-xdcr","text":"Cross Data Center Replication is a method to replicate date between source and target bucket. Plugin is automatically setting up an one way replication from a production Couchbase cluster to a staging Couchbase cluster created by Delphix Enging during a dSource ingestion. Replication to staging server will be added to the existing list of replication and it will be managed by plugin itself. link to official XDCR documentation","title":"Cross Data Center Replication (XDCR)"},{"location":"index.html#exiting-backup-ingestion-cbbackupmgr","text":"Couchbase Enterprise Edition is providing an additional tool called cbbackupmgr . This tool can be leveraged to protect a production Couchbase cluster and an existing backup will be used to create a staging server. This method allow cloning a production Couchbase cluster without touching a production server by Delphix Engine nor staging server. In zero production touch setup staging server has to have access to cbbackupmgr archive folder and repository. link to official cbbackupmgr documentation","title":"Exiting backup ingestion ( cbbackupmgr )"},{"location":"index.html#architecture-diagrams","text":"","title":"Architecture diagrams"},{"location":"index.html#ingestion-using-xdcr","text":"","title":"Ingestion using XDCR"},{"location":"index.html#ingestion-using-backup","text":"","title":"Ingestion using backup"},{"location":"index.html#support-matrix","text":"","title":"Support Matrix"},{"location":"index.html#prerequisites","text":"","title":"Prerequisites"},{"location":"index.html#staging-environment","text":"Couchbase binaries installed and configured: disable a auto start using OS services systemctl disable couchbase-server.service systemctl stop couchbase-server.service Regular o/s user - ex. delphix_os Add OS user to couchbase OS group Empty folder on host to hold delphix toolkit [ approximate 2GB free space ]. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and acts as a base folder for NFS mounts. sudo privileges for mount and umount. See sample below assuming delphix_os is used as delphix user. Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount If Couchbase service is installed using couchbase user, Delphix OS user ex. delphix_os has to be able to run any command as couchbase using sudo delphix_os ALL=(couchbase) NOPASSWD: ALL","title":"Staging environment"},{"location":"index.html#additional-prerequisites-for-xdcr-ingestion","text":"Production Couchbase database user with the following provileges XDCR_ADMIN DATA_MONITOR If source is a Community Edition, a production Couchbase database user has to be a full admin privilege to be able to create and monitor XDCR replication","title":"Additional prerequisites for XDCR ingestion"},{"location":"index.html#additional-prerequisites-for-backup-ingestion","text":"Access to an existing backup on the staging server. If access is provided over NFS to an existing backup (ex. mount path is /u01/couchbase_backup ) and repository is called PROD the following command have to succeed: /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo PROD If a new backup will configured on the staging host, the following commands should be executed. Ex. backup location /u01/couchbase_backup , repository name delphix Create config file using the following command. This file will be required at the time of dSource creation using CBBACKUPMGR. /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix Bring backup of the production system: Copy an existing backup Backup from source host into backup directory of staging host /opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<production server> -u user -p password","title":"Additional prerequisites for backup ingestion"},{"location":"index.html#target-environment","text":"Couchbase binaries installed and configured: disable a auto start using OS services systemctl disable couchbase-server.service systemctl stop couchbase-server.service Regular o/s user - ex. delphix_os Add OS user to couchbase OS group Empty folder on host to hold delphix toolkit [ approximate 2GB free space ]. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and acts as a base folder for NFS mounts. sudo privileges for mount and umount. See sample below assuming delphix_os is used as delphix user. bash Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount If Couchbase service is installed using couchbase user, Delphix OS user ex. delphix_os has to be able to run any command as couchbase using sudo shell delphix_os ALL=(couchbase) NOPASSWD: ALL","title":"Target environment"},{"location":"index.html#ports","text":"","title":"Ports"},{"location":"index.html#ports-for-xdcr","text":"","title":"Ports for XDCR"},{"location":"index.html#ports-for-backup","text":"","title":"Ports for Backup"},{"location":"index.html#limitations","text":"Multi-node VDB can't be cloned. V2P is not supported Point in time recovery is not supported. Provision / refresh / rewind time is based on snapshot only","title":"Limitations"},{"location":"Discovery.html","text":"Discovery \u00b6 Environment discovery is a process that enables the Couchbase Plugin to determine Couchbase installation details on a host. Database discovery is initiated during the environment set up process . Whenever there is any change (installing a new database home) to an already set up environment in the Delphix application, we need to perform an environment refresh. Prerequisites \u00b6 A stagine or target environment must be added to the Delphix Engine. Installation of the Couchbase Plugin is required before the Discovery. Environment variable $COUCHBASE_PATH should set on staging/target host, which contains the binary path of Couchbase. Configuring a staging environment \u00b6 Environments contain repositories, and each environment may have any number of repositories associated with it. Couchbase is limiting number of Couchbase binaries installed on server to one, and in that case each environment will contain a single repository with current Couchbase installation. Repository contains database instances and in each repository any number of source cluster can be configured. Please keep in mind that only one dSource can be enabled simiultaniusly on a given staging server. For next step go to XDCR Setup or Backup Setup sections below XDCR Setup \u00b6 By default Couchbase cluster are not discovered and has to be added manually using the following steps: Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter port number in Source Couchbase port section. Enter source host address in section Source Host ( this will be used as Source cluster for XDCR replication ) Enter unique name for the staging database in identify field section. Enter Couchbase data path of staging host in DB data path section. Backup Setup \u00b6 By default Couchbase clusters are not discovered and has to be added manually using the following steps: Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter port number in Source Couchbase port section ( this can be any dummy number - this field is not used for backup based ingestion ) Enter source host address in section Source Host ( this can be any dummy number - this field is not used for backup based ingestion ) Enter unique name for the staging database in identify field section. Enter Couchbase data path of staging host in DB data path section. Refreshing an Environment \u00b6 Environment refresh will update the metadata associated with that environment and send a new Plugin to the host. Login to the Delphix Management application. Click Manage . Select Environments . In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh .","title":"Discovery"},{"location":"Discovery.html#discovery","text":"Environment discovery is a process that enables the Couchbase Plugin to determine Couchbase installation details on a host. Database discovery is initiated during the environment set up process . Whenever there is any change (installing a new database home) to an already set up environment in the Delphix application, we need to perform an environment refresh.","title":"Discovery"},{"location":"Discovery.html#prerequisites","text":"A stagine or target environment must be added to the Delphix Engine. Installation of the Couchbase Plugin is required before the Discovery. Environment variable $COUCHBASE_PATH should set on staging/target host, which contains the binary path of Couchbase.","title":"Prerequisites"},{"location":"Discovery.html#configuring-a-staging-environment","text":"Environments contain repositories, and each environment may have any number of repositories associated with it. Couchbase is limiting number of Couchbase binaries installed on server to one, and in that case each environment will contain a single repository with current Couchbase installation. Repository contains database instances and in each repository any number of source cluster can be configured. Please keep in mind that only one dSource can be enabled simiultaniusly on a given staging server. For next step go to XDCR Setup or Backup Setup sections below","title":"Configuring a staging environment"},{"location":"Discovery.html#xdcr-setup","text":"By default Couchbase cluster are not discovered and has to be added manually using the following steps: Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter port number in Source Couchbase port section. Enter source host address in section Source Host ( this will be used as Source cluster for XDCR replication ) Enter unique name for the staging database in identify field section. Enter Couchbase data path of staging host in DB data path section.","title":"XDCR Setup"},{"location":"Discovery.html#backup-setup","text":"By default Couchbase clusters are not discovered and has to be added manually using the following steps: Login to the Delphix Management application. Click Manage . Select Environments . Select the repository. Click on + icon (Shown in next image). Add required details in the Add database section. Enter port number in Source Couchbase port section ( this can be any dummy number - this field is not used for backup based ingestion ) Enter source host address in section Source Host ( this can be any dummy number - this field is not used for backup based ingestion ) Enter unique name for the staging database in identify field section. Enter Couchbase data path of staging host in DB data path section.","title":"Backup Setup"},{"location":"Discovery.html#refreshing-an-environment","text":"Environment refresh will update the metadata associated with that environment and send a new Plugin to the host. Login to the Delphix Management application. Click Manage . Select Environments . In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh .","title":"Refreshing an Environment"},{"location":"Installation.html","text":"Plugin Installation \u00b6 Prerequisites \u00b6 Install Delphix Engine of version 5.3.x. Install Couchbase binaries on source, staging, and target servers Installing the Couchbase Plugin \u00b6 Method1: Using GUI \u00b6 Click on Manage (present on top-left of this page) and then Plugins . Click on + icon. Click on Upload a plugin. Select the build(artifacts.json) from your device. Click on close button. See the plugin version in Plugins section. Method2: Using dvp command \u00b6 dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement .","title":"Plugin Installation"},{"location":"Installation.html#plugin-installation","text":"","title":"Plugin Installation"},{"location":"Installation.html#prerequisites","text":"Install Delphix Engine of version 5.3.x. Install Couchbase binaries on source, staging, and target servers","title":"Prerequisites"},{"location":"Installation.html#installing-the-couchbase-plugin","text":"","title":"Installing the Couchbase Plugin"},{"location":"Installation.html#method1-using-gui","text":"Click on Manage (present on top-left of this page) and then Plugins . Click on + icon. Click on Upload a plugin. Select the build(artifacts.json) from your device. Click on close button. See the plugin version in Plugins section.","title":"Method1: Using GUI"},{"location":"Installation.html#method2-using-dvp-command","text":"dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement .","title":"Method2: Using dvp command"},{"location":"Linking.html","text":"Linking \u00b6 Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database. Prerequisites \u00b6 Staging environment created and source database configured in discovered repository Creating dSource using XDCR \u00b6 Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the Couchbase source configuration which is created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type XDCR from the drop-down available on dSource wizard. Based on approach selection, follow the steps either for XDCR or Couchbase Backup Manager method. The Description of both methods is below. Enter the details for Staging Couchbase host - FQDN or IP address recommended. Enter the details for Staging Port Number available on the staging host. The default port for couchbase is 8091. Enter the details for Mount Path available on the staging host. This empty folder acts as a base for NFS mounts. Enter the details for Staging Cluster Name to setup new cluster on the staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size - this should be 0 Cluster Analysis RAM Size - this should be 0 Enter the details for Staging Cluster Admin User and Staging Cluster Admin Password Enter the details for Source Cluster Admin User and Source Cluster Admin Password If not all buckets needs to be replicated, click on + plus symbol to modify configuration settings. Mention bucket list for which cross datacenter replication (XDCR) only be enabled. Enter the details of Bucket Name to be part of XDCR. Then click on Next button Provide the details for dSource Name and Target group on the dSource configuration page. On the Data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next screens, configure a policy, hooks and review the configuration and click on Next button to view the summary. Click the Submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name . Creating dSource using backup \u00b6 Prerequisites: Access to production backup with those ex. values: /backup - archive PROD - repository /opt/couchbase/bin/cbbackupmgr info -a /backup -r PROD Name | Size | # Backups | PROD | 58.03MB | 1 | + Backup | Size | Type | Source | Cluster UUID | Range | Events | Aliases | Complete | + 2022-01-10T11_29_26.465860528-05_00 | 58.03MB | FULL | http://couchbasesrc.dlpxdc.co:8091 | 08f7937a26b2d20178a5ed16d7a2dd1c | N/A | 0 | 0 | true | Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the Couchbase source configuration which is created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type Couchbase Backup Manager from the drop-down available on dSource wizard. Based on approach selection, follow the steps either for XDCR or Couchbase Backup Manager method. The Description of both methods is below. Enter the details for Staging Couchbase host - FQDN or IP address recommended. Enter the details for Staging Port Number available on the staging host. The default port for couchbase is 8091. Enter the details for Backup Location available on the staging host. Enter the details for Backup repository Enter the details for Mount Path available on the staging host. This empty folder acts as a base for NFS mounts. Enter the details for Staging Cluster Name to setup new cluster on the staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size - this should be 0 Cluster Analysis RAM Size - this should be 0 Enter the details for Staging Cluster Admin User and Staging Cluster Admin Password Enter dummy values for Source Cluster Admin User and Source Cluster Admin Password - they are not used Then click on Next button Provide the details for dSource Name and Target group on the dSource configuration page. On the Data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next screens, configure a policy, hooks and review the configuration and click on Next button to view the summary. Click the Submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name .","title":"Linking"},{"location":"Linking.html#linking","text":"Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database.","title":"Linking"},{"location":"Linking.html#prerequisites","text":"Staging environment created and source database configured in discovered repository","title":"Prerequisites"},{"location":"Linking.html#creating-dsource-using-xdcr","text":"Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the Couchbase source configuration which is created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type XDCR from the drop-down available on dSource wizard. Based on approach selection, follow the steps either for XDCR or Couchbase Backup Manager method. The Description of both methods is below. Enter the details for Staging Couchbase host - FQDN or IP address recommended. Enter the details for Staging Port Number available on the staging host. The default port for couchbase is 8091. Enter the details for Mount Path available on the staging host. This empty folder acts as a base for NFS mounts. Enter the details for Staging Cluster Name to setup new cluster on the staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size - this should be 0 Cluster Analysis RAM Size - this should be 0 Enter the details for Staging Cluster Admin User and Staging Cluster Admin Password Enter the details for Source Cluster Admin User and Source Cluster Admin Password If not all buckets needs to be replicated, click on + plus symbol to modify configuration settings. Mention bucket list for which cross datacenter replication (XDCR) only be enabled. Enter the details of Bucket Name to be part of XDCR. Then click on Next button Provide the details for dSource Name and Target group on the dSource configuration page. On the Data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next screens, configure a policy, hooks and review the configuration and click on Next button to view the summary. Click the Submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name .","title":"Creating dSource using XDCR"},{"location":"Linking.html#creating-dsource-using-backup","text":"Prerequisites: Access to production backup with those ex. values: /backup - archive PROD - repository /opt/couchbase/bin/cbbackupmgr info -a /backup -r PROD Name | Size | # Backups | PROD | 58.03MB | 1 | + Backup | Size | Type | Source | Cluster UUID | Range | Events | Aliases | Complete | + 2022-01-10T11_29_26.465860528-05_00 | 58.03MB | FULL | http://couchbasesrc.dlpxdc.co:8091 | 08f7937a26b2d20178a5ed16d7a2dd1c | N/A | 0 | 0 | true | Login to Delphix Management application. Click Manage > Datasets . Select Add dSource . In the Add dSource wizard, select the Couchbase source configuration which is created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type Couchbase Backup Manager from the drop-down available on dSource wizard. Based on approach selection, follow the steps either for XDCR or Couchbase Backup Manager method. The Description of both methods is below. Enter the details for Staging Couchbase host - FQDN or IP address recommended. Enter the details for Staging Port Number available on the staging host. The default port for couchbase is 8091. Enter the details for Backup Location available on the staging host. Enter the details for Backup repository Enter the details for Mount Path available on the staging host. This empty folder acts as a base for NFS mounts. Enter the details for Staging Cluster Name to setup new cluster on the staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size - this should be 0 Cluster Analysis RAM Size - this should be 0 Enter the details for Staging Cluster Admin User and Staging Cluster Admin Password Enter dummy values for Source Cluster Admin User and Source Cluster Admin Password - they are not used Then click on Next button Provide the details for dSource Name and Target group on the dSource configuration page. On the Data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next screens, configure a policy, hooks and review the configuration and click on Next button to view the summary. Click the Submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name .","title":"Creating dSource using backup"},{"location":"PluginDevelopment.html","text":"Building a Plugin \u00b6 Create a virtual environment and use the following script to install the required libraries (pytest, pytest-html, and pytest-cov): i) cd /Users/<your-user-name>/Desktop/Plugins/OpenSourceCouchbase/couchbase-plugin ii) ./test/virtualEnvSetup.sh \"MyLocalEnv\" Run this command to activate the virtual environment created in step 1. . test/MyLocalEnv/bin/activate Build the source code. It generates the build with name artifact.json : dvp build Uploading a Plugin \u00b6 Upload the artifact.json (generated in step 3) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Unit Test \u00b6 Unit test run: Make sure to build the source code (using dvp build ) before running unit tests. Execute below command to run unit tests: pytest test/ . Summary Report \u00b6 A report with the name Report.html gets generated in the test directory which contains the summary of test passed vs failed. If any test case fails then a complete stack trace can be seen in that test case section. Module wise coverage report \u00b6 There is a report folder CodeCoverage (can change the folder name in config file pytest.ini ) generated in test directory, which contains html files. These files help in source code coverage visualization, in which we can see statements processed and missed in each module of source code. Debugging Plugin Logs \u00b6 Download the Plugin logs using the following command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"PluginDevelopment"},{"location":"PluginDevelopment.html#building-a-plugin","text":"Create a virtual environment and use the following script to install the required libraries (pytest, pytest-html, and pytest-cov): i) cd /Users/<your-user-name>/Desktop/Plugins/OpenSourceCouchbase/couchbase-plugin ii) ./test/virtualEnvSetup.sh \"MyLocalEnv\" Run this command to activate the virtual environment created in step 1. . test/MyLocalEnv/bin/activate Build the source code. It generates the build with name artifact.json : dvp build","title":"Building a Plugin"},{"location":"PluginDevelopment.html#uploading-a-plugin","text":"Upload the artifact.json (generated in step 3) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password>","title":"Uploading a Plugin"},{"location":"PluginDevelopment.html#unit-test","text":"Unit test run: Make sure to build the source code (using dvp build ) before running unit tests. Execute below command to run unit tests: pytest test/ .","title":"Unit Test"},{"location":"PluginDevelopment.html#summary-report","text":"A report with the name Report.html gets generated in the test directory which contains the summary of test passed vs failed. If any test case fails then a complete stack trace can be seen in that test case section.","title":"Summary Report"},{"location":"PluginDevelopment.html#module-wise-coverage-report","text":"There is a report folder CodeCoverage (can change the folder name in config file pytest.ini ) generated in test directory, which contains html files. These files help in source code coverage visualization, in which we can see statements processed and missed in each module of source code.","title":"Module wise coverage report"},{"location":"PluginDevelopment.html#debugging-plugin-logs","text":"Download the Plugin logs using the following command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"Debugging Plugin Logs"},{"location":"Provisioning.html","text":"Provisioning \u00b6 Virtual databases are a virtualized copies of dSource. Prerequisites \u00b6 Required a linked dSource from a source host. All prerequisites configured on target environments Added compatible target environment on Delphix Engine Provisioning a VDB \u00b6 Start a provisioning wizard Select the target host from the dropdown on which VDB needs to be created. Enter the following values for the target configuration: Target Port Number : Port number on which Couchbase services will be started. ( ex. 8091 ) Mount Path : NFS mount path where dSource snapshot will be mounted by Engine ( ex. /mnt/provision/targetdemo ) Target Cluster name : Cluster name which is required to be set up on the target host. ( ex. targetdemo ) Cluster Ram Size : Whole Cluster memory Cluster Index Ram Size : Cluster indexer memory Cluster FTS Ram Size : Cluster FTS memory ( if needed and FTS service will be configured ) Cluster Eventing Ram Size : Cluster Eventing memory ( if needed and Eventing service will be configured ) Cluster Analytics Ram Size : Cluster Analytics memory ( if needed and Analytics service will be configured ) Enter the following values for the target configuration: Target couchbase Admin User : Target Cluster admin username Target couchbase Admin password : Target Cluster admin password Select services needed on the target cluster ( FTS, Eventing, Analytics ) Provision plugin based VDB. Enter the follwing value: VDB Name : Delphix Target Cluster name Target group : Delphix Target Cluster group Select a policy for VDB, select Next . Select masking for VDB if needed, select Next Add hooks for VDB if needed, select Next Preview the summary and select Submit Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name . Provisioning a Multinode VDB \u00b6 Start a provisioning wizard Select the target host from the dropdown on which VDB needs to be created. Enter the following values for the target configuration: Target Port Number : Port number on which Couchbase services will be started. ( ex. 8091 ) Mount Path : NFS mount path where dSource snapshot will be mounted by Engine ( ex. /mnt/provision/targetdemo ) Target Cluster name : Cluster name which is required to be set up on the target host. ( ex. targetdemo ) Cluster Ram Size : Whole Cluster memory Cluster Index Ram Size : Cluster indexer memory Cluster FTS Ram Size : Cluster FTS memory ( if needed and FTS service will be configured ) Cluster Eventing Ram Size : Cluster Eventing memory ( if needed and Eventing service will be configured ) Cluster Analytics Ram Size : Cluster Analytics memory ( if needed and Analytics service will be configured ) Enter the following values for the target configuration: Target couchbase Admin User : Target Cluster admin username Target couchbase Admin password : Target Cluster admin password Select services needed on the first node of the cluster ( FTS, Eventing, Analytics ) Click Add buton to open a dialog box for additional node. If you need more nodes, click Add button again to add more nodes Enter the following values for each node: Delphix Environment Name : Select an additional node environment from drop-down menu Delphix Environment User : Select an environment user Node hostname / IP : Enter a hostname or IP of the new node - it will be used as a server name in Couchbase configuration Select services needed on the additional node of the cluster ( FTS, Eventing, Analytics ) Provision plugin based VDB. Enter the follwing value: VDB Name : Delphix Target Cluster name Target group : Delphix Target Cluster group Select a policy for VDB, select Next . Select masking for VDB if needed, select Next Add hooks for VDB if needed, select Next Preview the summary and select Submit Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name . Accesssing Target VDB Cluster \u00b6 Use a IP / Hostname of the target environment and VDB port defined above to access Target Cluster VDB. Admin user name and password are defined based on input from point 4. An example screenshot of Couchbase Console of the provisioned VDB can be find below:","title":"Provisioning"},{"location":"Provisioning.html#provisioning","text":"Virtual databases are a virtualized copies of dSource.","title":"Provisioning"},{"location":"Provisioning.html#prerequisites","text":"Required a linked dSource from a source host. All prerequisites configured on target environments Added compatible target environment on Delphix Engine","title":"Prerequisites"},{"location":"Provisioning.html#provisioning-a-vdb","text":"Start a provisioning wizard Select the target host from the dropdown on which VDB needs to be created. Enter the following values for the target configuration: Target Port Number : Port number on which Couchbase services will be started. ( ex. 8091 ) Mount Path : NFS mount path where dSource snapshot will be mounted by Engine ( ex. /mnt/provision/targetdemo ) Target Cluster name : Cluster name which is required to be set up on the target host. ( ex. targetdemo ) Cluster Ram Size : Whole Cluster memory Cluster Index Ram Size : Cluster indexer memory Cluster FTS Ram Size : Cluster FTS memory ( if needed and FTS service will be configured ) Cluster Eventing Ram Size : Cluster Eventing memory ( if needed and Eventing service will be configured ) Cluster Analytics Ram Size : Cluster Analytics memory ( if needed and Analytics service will be configured ) Enter the following values for the target configuration: Target couchbase Admin User : Target Cluster admin username Target couchbase Admin password : Target Cluster admin password Select services needed on the target cluster ( FTS, Eventing, Analytics ) Provision plugin based VDB. Enter the follwing value: VDB Name : Delphix Target Cluster name Target group : Delphix Target Cluster group Select a policy for VDB, select Next . Select masking for VDB if needed, select Next Add hooks for VDB if needed, select Next Preview the summary and select Submit Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name .","title":"Provisioning a VDB"},{"location":"Provisioning.html#provisioning-a-multinode-vdb","text":"Start a provisioning wizard Select the target host from the dropdown on which VDB needs to be created. Enter the following values for the target configuration: Target Port Number : Port number on which Couchbase services will be started. ( ex. 8091 ) Mount Path : NFS mount path where dSource snapshot will be mounted by Engine ( ex. /mnt/provision/targetdemo ) Target Cluster name : Cluster name which is required to be set up on the target host. ( ex. targetdemo ) Cluster Ram Size : Whole Cluster memory Cluster Index Ram Size : Cluster indexer memory Cluster FTS Ram Size : Cluster FTS memory ( if needed and FTS service will be configured ) Cluster Eventing Ram Size : Cluster Eventing memory ( if needed and Eventing service will be configured ) Cluster Analytics Ram Size : Cluster Analytics memory ( if needed and Analytics service will be configured ) Enter the following values for the target configuration: Target couchbase Admin User : Target Cluster admin username Target couchbase Admin password : Target Cluster admin password Select services needed on the first node of the cluster ( FTS, Eventing, Analytics ) Click Add buton to open a dialog box for additional node. If you need more nodes, click Add button again to add more nodes Enter the following values for each node: Delphix Environment Name : Select an additional node environment from drop-down menu Delphix Environment User : Select an environment user Node hostname / IP : Enter a hostname or IP of the new node - it will be used as a server name in Couchbase configuration Select services needed on the additional node of the cluster ( FTS, Eventing, Analytics ) Provision plugin based VDB. Enter the follwing value: VDB Name : Delphix Target Cluster name Target group : Delphix Target Cluster group Select a policy for VDB, select Next . Select masking for VDB if needed, select Next Add hooks for VDB if needed, select Next Preview the summary and select Submit Once the VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name .","title":"Provisioning a Multinode VDB"},{"location":"Provisioning.html#accesssing-target-vdb-cluster","text":"Use a IP / Hostname of the target environment and VDB port defined above to access Target Cluster VDB. Admin user name and password are defined based on input from point 4. An example screenshot of Couchbase Console of the provisioned VDB can be find below:","title":"Accesssing Target VDB Cluster"}]}