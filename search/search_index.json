{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview \u00b6 Couchbase plugin is developed to virtualize couchbase data source leveraging the following built-in couchbase technologies: Cross Data Center Replication (XDCR) allows data to be replicated across clusters that are potentially located in different data centers. Cbbackupmgr allows data to be restored on staging host of Couchbase Server. Ingest Couchbase \u00b6 Couchbase cluster/single instance using (XDCR ingestion mechanism) Couchbase backup peice using (CBBACKUPMGR ingestion mechanism) - Zero Touch Production. Prerequisites \u00b6 Source Requirements: Couchbase database user with following privileges * XDCR_ADMIN * DATA_MONITOR Staging Requirements : O/S user with following privileges 1. Regular o/s user. 2. Execute access on couchbase binaries [ chmod -R 775 /opt/couchbase ] 3. Empty folder on host to hold delphix toolkit [ approximate 2GB free space ] 4. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and act as base folder for nfs mounts. 5. sudo privileges for mount, umount. See sample below assuming delphix_os is used as delphix user. shell Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount 6. Customers who intends to use CBBACKUPMGR (Couchbase backup manager ingestion) must follow the instructions to avoid source/production server dependency. * Provide all source server buckets related information( using below command ) in a file and place at `<Toolkit-Directory-Path>/couchbase_src_bucket_info.cfg`: `/opt/couchbase/bin/couchbase-cli bucket-list --cluster <sourcehost>:8091 --username $username --password $password` * Create config file using below command. This file will be required at the time of dSource creation using CBBACKUPMGR. `/opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix` * Get data from source host in backup directory of staging host `/opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<hostname> -u user -p password` Target Requirements : O/S user with following privileges 1. Regular o/s user. 2. Execute access on couchbase binaries [ chmod -R 775 /opt/couchbase ] 3. Empty folder on host to hold delphix toolkit [ approximate 2GB free space ] 4. Empty folder on host to mount nfs filesystem. This is just and empty folder with no space requirements and act as base folder for nfs mounts. 5. sudo privileges for mount, umount. See sample below assuming delphix_os is used as delphix user. shell Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount","title":"Overview"},{"location":"#overview","text":"Couchbase plugin is developed to virtualize couchbase data source leveraging the following built-in couchbase technologies: Cross Data Center Replication (XDCR) allows data to be replicated across clusters that are potentially located in different data centers. Cbbackupmgr allows data to be restored on staging host of Couchbase Server.","title":"Overview"},{"location":"#ingest-couchbase","text":"Couchbase cluster/single instance using (XDCR ingestion mechanism) Couchbase backup peice using (CBBACKUPMGR ingestion mechanism) - Zero Touch Production.","title":"Ingest Couchbase"},{"location":"#prerequisites","text":"Source Requirements: Couchbase database user with following privileges * XDCR_ADMIN * DATA_MONITOR Staging Requirements : O/S user with following privileges 1. Regular o/s user. 2. Execute access on couchbase binaries [ chmod -R 775 /opt/couchbase ] 3. Empty folder on host to hold delphix toolkit [ approximate 2GB free space ] 4. Empty folder on host to mount nfs filesystem. This is just an empty folder with no space requirements and act as base folder for nfs mounts. 5. sudo privileges for mount, umount. See sample below assuming delphix_os is used as delphix user. shell Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount 6. Customers who intends to use CBBACKUPMGR (Couchbase backup manager ingestion) must follow the instructions to avoid source/production server dependency. * Provide all source server buckets related information( using below command ) in a file and place at `<Toolkit-Directory-Path>/couchbase_src_bucket_info.cfg`: `/opt/couchbase/bin/couchbase-cli bucket-list --cluster <sourcehost>:8091 --username $username --password $password` * Create config file using below command. This file will be required at the time of dSource creation using CBBACKUPMGR. `/opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix` * Get data from source host in backup directory of staging host `/opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<hostname> -u user -p password` Target Requirements : O/S user with following privileges 1. Regular o/s user. 2. Execute access on couchbase binaries [ chmod -R 775 /opt/couchbase ] 3. Empty folder on host to hold delphix toolkit [ approximate 2GB free space ] 4. Empty folder on host to mount nfs filesystem. This is just and empty folder with no space requirements and act as base folder for nfs mounts. 5. sudo privileges for mount, umount. See sample below assuming delphix_os is used as delphix user. shell Defaults:delphixos !requiretty delphixos ALL=NOPASSWD: \\ /bin/mount, /bin/umount","title":"Prerequisites"},{"location":"Discovery/","text":"Refresh Environment Create sourceconfig for XDCR setup Create sourceconfig for cbbackupmgr setup Purpose \u00b6 Environment discovery is a process that enables the couchbase Plugin to determine couchbase installation details on a host. Database discovery is initiated during the environment set up process. Whenver there is any changes (installing a new database home) to an already set up environment in the Delphix application, we need to perform environment refresh. Prerequisites \u00b6 A source environment must be added to the Delphix Engine Installation of the couchbase Plugin is required before the discovery Environment variable $COUCHBASE_PATH should set on staging/target host, which contains binary path of couchbase Refresh Environment \u00b6 Environment refresh will update the metadata associated with that environment and sends a new plugin to the host. Steps: Login to the Delphix Management application. Click Manage. Select Environments. In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh. Create Sourceconfig \u00b6 Environments exist to contain repositories , and each environment may have any number of repositories associated with it. Repository contains database instances and in each repository any number of SourceConfig objects, which represent known database instances. There is no source config generated automatically in couchbase-plugin. Therefore, we need to add SourceConfig objects through which can create a dSource. XDCR setup: Login to the Delphix Management application. Click Manage. Select Environments. Select the repository Click on + icon ( Shown in next image ) Add required details in Add database section. Source Couchbase port : Port number Source Host : Source host address identity field : Proivide unique name for staging database DB data path : Provide couchbase datapath available on your staging host CBBKPMGR setup: The steps to add source config remain same as we saw in XDCR setup. In this approach, we do not require any connection to source environment (zero touch production) and Delphix does not require details for source host. We can enter any random or dummy value in this field of source host name when we choose Cbbackupmgr option for data ingestion. Login to the Delphix Management application. Click Manage. Select Environments. Select the repository. Click on + icon ( Shown in next image ). Add required details in Add database section. Source Couchbase port : Port number Source Host : Put dummy value for now identity field : Proivide unique name for staging database DB data path : Put dummy value for now","title":"Useful Skills"},{"location":"Discovery/#purpose","text":"Environment discovery is a process that enables the couchbase Plugin to determine couchbase installation details on a host. Database discovery is initiated during the environment set up process. Whenver there is any changes (installing a new database home) to an already set up environment in the Delphix application, we need to perform environment refresh.","title":"Purpose"},{"location":"Discovery/#prerequisites","text":"A source environment must be added to the Delphix Engine Installation of the couchbase Plugin is required before the discovery Environment variable $COUCHBASE_PATH should set on staging/target host, which contains binary path of couchbase","title":"Prerequisites"},{"location":"Discovery/#refresh-environment","text":"Environment refresh will update the metadata associated with that environment and sends a new plugin to the host. Steps: Login to the Delphix Management application. Click Manage. Select Environments. In the Environments panel, click the name of the environment you want to refresh. Select the Refresh icon. In the Refresh confirmation dialog select Refresh.","title":"Refresh Environment"},{"location":"Discovery/#create-sourceconfig","text":"Environments exist to contain repositories , and each environment may have any number of repositories associated with it. Repository contains database instances and in each repository any number of SourceConfig objects, which represent known database instances. There is no source config generated automatically in couchbase-plugin. Therefore, we need to add SourceConfig objects through which can create a dSource. XDCR setup: Login to the Delphix Management application. Click Manage. Select Environments. Select the repository Click on + icon ( Shown in next image ) Add required details in Add database section. Source Couchbase port : Port number Source Host : Source host address identity field : Proivide unique name for staging database DB data path : Provide couchbase datapath available on your staging host CBBKPMGR setup: The steps to add source config remain same as we saw in XDCR setup. In this approach, we do not require any connection to source environment (zero touch production) and Delphix does not require details for source host. We can enter any random or dummy value in this field of source host name when we choose Cbbackupmgr option for data ingestion. Login to the Delphix Management application. Click Manage. Select Environments. Select the repository. Click on + icon ( Shown in next image ). Add required details in Add database section. Source Couchbase port : Port number Source Host : Put dummy value for now identity field : Proivide unique name for staging database DB data path : Put dummy value for now","title":"Create Sourceconfig"},{"location":"Installation/","text":"Prerequisites How To install plugin Prerequisites \u00b6 Install delphix engine 5.3.x and above Install couchbase binaries on source, staging and target servers Install Couchbase Plugin \u00b6 Using GUI \u00b6 Click on Manage and then Plugins Click on + icon Click on Upload or Upgrade a plugin Select the build(artifacts.json) Click on close button See the plugin version in Plugins section Using dvp command \u00b6 dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement","title":"Installation"},{"location":"Installation/#prerequisites","text":"Install delphix engine 5.3.x and above Install couchbase binaries on source, staging and target servers","title":"Prerequisites"},{"location":"Installation/#install-couchbase-plugin","text":"","title":"Install Couchbase Plugin"},{"location":"Installation/#using-gui","text":"Click on Manage and then Plugins Click on + icon Click on Upload or Upgrade a plugin Select the build(artifacts.json) Click on close button See the plugin version in Plugins section","title":"Using GUI"},{"location":"Installation/#using-dvp-command","text":"dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Delphix Engine's documentation on installing plugins: PluginManagement","title":"Using dvp command"},{"location":"Linking/","text":"Purpose Prerequisites Create dSource XDCR Method Couchbase Backup Manager Method Purpose \u00b6 Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database. Prerequisites \u00b6 Discovery and source config object should be created on staging host before proceeding to link couchbase dataset Create dSource \u00b6 Steps: Login to Delphix Management application. Click Manage > Datasets Select Add dSource. In the Add dSource wizard, select the couchbase source config you just created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type from the drop-down available on dSource wizard. XDCR Method \u00b6 Cross data center replication allows data to be replicated across clusters that are potentially located in different data centers. Enter the details for \"Staging Couchbase host\" - FQDN or IP address recommended Enter the details for \"Staging Port Number\" available on staging host. The default port for couchbase is 8091. Enter the details for \"Mount Path\" available on staging host. This empty folder acts as a base for NFS mounts. Enter the details for \"Staging Cluster Name\" you would like Delphix to setup on your staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size Cluster Analysis RAM Size Click on (+) plus symbol to modify configuration settings. This option allows to include bucket lists which should be part of couchbase cross data center replication (XDCR). Enter the details of Bucket Name to be part of XDCR. Provide the details for \"dSource Name\" and \"Target group\" on the dSource configuration page. On the data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next section, review the configuration and click on next button to review the final summary. Click the submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name. Review the datasets on Manage > Environment > Database section. Couchbase Backup Manager Method \u00b6 Follow below instructions before going to create dsource to avoid source/production server dependency. - Provide source server buckets related information in a file and place at /tmp/couchbase_src_bucket_info.cfg /opt/couchbase/bin/couchbase-cli bucket-list --cluster <sourcehost>:8091 --username $username --password $password Backup Repository: This file will be required at the time of dSource creation using CBBACKUPMGR. /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix Backup Location: Get data from source host in backup directory of staging host /opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<hostname> -u user -p password Steps: Login to Delphix Management application. Click Manage > Datasets Select Add dSource. In the Add dSource wizard, select the couchbase source config you just created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type from the drop-down available on dSource wizard. Couchbase Backup Manager: Cbbackupmgr allows data to be restored on staging host of Couchbase Server. When we select CBbackupmgr as dSource Type, the following fields on dSource wizard are mandatory. Enter the details for \"Backup Location\" where the backup files generated through cbbackupmgr are present on the staging host. Enter the details for \"Backup Repository\" that contains a backup configuration of staging host. Details on how how to setup backup repository are listed here. Note: When we select dSource Type as Couchbase Backup Manager, we do not require any details for Staging Couchbase Host field. 10. Remaining steps for cbbackupmgr ingestion are similar to XDCR.","title":"Linking"},{"location":"Linking/#purpose","text":"Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database.","title":"Purpose"},{"location":"Linking/#prerequisites","text":"Discovery and source config object should be created on staging host before proceeding to link couchbase dataset","title":"Prerequisites"},{"location":"Linking/#create-dsource","text":"Steps: Login to Delphix Management application. Click Manage > Datasets Select Add dSource. In the Add dSource wizard, select the couchbase source config you just created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type from the drop-down available on dSource wizard.","title":"Create dSource"},{"location":"Linking/#xdcr-method","text":"Cross data center replication allows data to be replicated across clusters that are potentially located in different data centers. Enter the details for \"Staging Couchbase host\" - FQDN or IP address recommended Enter the details for \"Staging Port Number\" available on staging host. The default port for couchbase is 8091. Enter the details for \"Mount Path\" available on staging host. This empty folder acts as a base for NFS mounts. Enter the details for \"Staging Cluster Name\" you would like Delphix to setup on your staging host. Enter the configuration details for your staging cluster as per resource availability on the staging host. Cluster RAM Size Cluster Index RAM Size Cluster FTS RAM Size Cluster Eventing RAM Size Cluster Analysis RAM Size Click on (+) plus symbol to modify configuration settings. This option allows to include bucket lists which should be part of couchbase cross data center replication (XDCR). Enter the details of Bucket Name to be part of XDCR. Provide the details for \"dSource Name\" and \"Target group\" on the dSource configuration page. On the data management page, select the following: Staging Environment: This will be your staging host where source config was created. User: Database OS user with required privileges for linking the dataset. On the next section, review the configuration and click on next button to review the final summary. Click the submit button which will initiate the linking process. Once dSource is created successfully, you can review the datasets on Manage > Datasets > dSource Name. Review the datasets on Manage > Environment > Database section.","title":"XDCR Method"},{"location":"Linking/#couchbase-backup-manager-method","text":"Follow below instructions before going to create dsource to avoid source/production server dependency. - Provide source server buckets related information in a file and place at /tmp/couchbase_src_bucket_info.cfg /opt/couchbase/bin/couchbase-cli bucket-list --cluster <sourcehost>:8091 --username $username --password $password Backup Repository: This file will be required at the time of dSource creation using CBBACKUPMGR. /opt/couchbase/bin/cbbackupmgr config --archive /u01/couchbase_backup --repo delphix Backup Location: Get data from source host in backup directory of staging host /opt/couchbase/bin/cbbackupmgr backup -a /u01/couchbase_backup -r delphix -c couchbase://<hostname> -u user -p password Steps: Login to Delphix Management application. Click Manage > Datasets Select Add dSource. In the Add dSource wizard, select the couchbase source config you just created on the staging host. Enter the Couchbase-specific parameters for your dSource configuration. Select the dSource type from the drop-down available on dSource wizard. Couchbase Backup Manager: Cbbackupmgr allows data to be restored on staging host of Couchbase Server. When we select CBbackupmgr as dSource Type, the following fields on dSource wizard are mandatory. Enter the details for \"Backup Location\" where the backup files generated through cbbackupmgr are present on the staging host. Enter the details for \"Backup Repository\" that contains a backup configuration of staging host. Details on how how to setup backup repository are listed here. Note: When we select dSource Type as Couchbase Backup Manager, we do not require any details for Staging Couchbase Host field. 10. Remaining steps for cbbackupmgr ingestion are similar to XDCR.","title":"Couchbase Backup Manager Method"},{"location":"PluginDevelopment/","text":"Build plugin \u00b6 Create a virtual environment and install required libraries(dvp, pytest, pytest-html & pytest-cov) using script virtualEnvSetup.sh . ``bash cd <complete path of project directory till couchbase-plugin` directory> ./test/virtualEnvSetup.sh For example: cd /Users/ /Desktop/Plugins/OpenSourceCouchbase/couchbase-plugin ./test/virtualEnvSetup.sh \"MyLocalEnv\" 2. Run this command to activate the virtual environment created in step 1. ```bash . test/MyLocalEnv/bin/activate ``` 3. Build the source code. It generates the build with name `artifacts.json`: ```bash dvp build Upload plugin \u00b6 Upload the artifacts.json ( generated in step 3 ) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Unit Test of Plugin code \u00b6 Unit test run: Make sure to build the source code( using dvp build ) before running unit tests bash pytest test/ SummaryReport: \u00b6 A report with name Report.html gets generated in test directory which contains the summary of test passed vs failed. If any test case fails then complete stack trace can be seen in that test case section. Module wise coverage report: \u00b6 There is a report folder CodeCoverage (can change the folder name in config file pytest.ini ) generated in test directory, which contains html files. These files help in source code coverage visualization, in which we can see statements processed and missed in each module of source code. Debug plugin logs \u00b6 Download the plugin logs using below command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"PluginDevelopment"},{"location":"PluginDevelopment/#build-plugin","text":"Create a virtual environment and install required libraries(dvp, pytest, pytest-html & pytest-cov) using script virtualEnvSetup.sh . ``bash cd <complete path of project directory till couchbase-plugin` directory> ./test/virtualEnvSetup.sh For example: cd /Users/ /Desktop/Plugins/OpenSourceCouchbase/couchbase-plugin ./test/virtualEnvSetup.sh \"MyLocalEnv\" 2. Run this command to activate the virtual environment created in step 1. ```bash . test/MyLocalEnv/bin/activate ``` 3. Build the source code. It generates the build with name `artifacts.json`: ```bash dvp build","title":"Build plugin"},{"location":"PluginDevelopment/#upload-plugin","text":"Upload the artifacts.json ( generated in step 3 ) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password>","title":"Upload plugin"},{"location":"PluginDevelopment/#unit-test-of-plugin-code","text":"Unit test run: Make sure to build the source code( using dvp build ) before running unit tests bash pytest test/","title":"Unit Test of Plugin code"},{"location":"PluginDevelopment/#summaryreport","text":"A report with name Report.html gets generated in test directory which contains the summary of test passed vs failed. If any test case fails then complete stack trace can be seen in that test case section.","title":"SummaryReport:"},{"location":"PluginDevelopment/#module-wise-coverage-report","text":"There is a report folder CodeCoverage (can change the folder name in config file pytest.ini ) generated in test directory, which contains html files. These files help in source code coverage visualization, in which we can see statements processed and missed in each module of source code.","title":"Module wise coverage report:"},{"location":"PluginDevelopment/#debug-plugin-logs","text":"Download the plugin logs using below command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"Debug plugin logs"},{"location":"Provisioning/","text":"Purpose Prerequisites Provision VDB Purpose \u00b6 Virtual databases are a virtualized copies of dSource. Prerequisites \u00b6 Required a linked dSource from a source host Added compatible target environment on Delphix enging Provision VDB \u00b6 Click on the icon Select the target host from dropdown and Enter the values as below in target configuration Target Port Number : Port number to start services Mount Path : NFS mount path where dSource snapshot will be mounted by engine Target Cluster name : Cluster name you would like Delphix to setup on your target host. Cluster Ram Size Cluster Index Ram Size Cluster FTS Ram Size Cluster Eventing Ram Size Cluster Analytics Ram Size Target couchbase Admin User Target couchbase Admin password Provision vFiles: Add vdb name and target group No need to add Policies, just press Next button No need to add Masking, just press Next button No need to add Hooks, just press Next button Preview the summary and submit Once VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name.","title":"Provisioning"},{"location":"Provisioning/#purpose","text":"Virtual databases are a virtualized copies of dSource.","title":"Purpose"},{"location":"Provisioning/#prerequisites","text":"Required a linked dSource from a source host Added compatible target environment on Delphix enging","title":"Prerequisites"},{"location":"Provisioning/#provision-vdb","text":"Click on the icon Select the target host from dropdown and Enter the values as below in target configuration Target Port Number : Port number to start services Mount Path : NFS mount path where dSource snapshot will be mounted by engine Target Cluster name : Cluster name you would like Delphix to setup on your target host. Cluster Ram Size Cluster Index Ram Size Cluster FTS Ram Size Cluster Eventing Ram Size Cluster Analytics Ram Size Target couchbase Admin User Target couchbase Admin password Provision vFiles: Add vdb name and target group No need to add Policies, just press Next button No need to add Masking, just press Next button No need to add Hooks, just press Next button Preview the summary and submit Once VDB is created successfully, you can review the datasets on Manage > Datasets > vdb Name.","title":"Provision VDB"}]}